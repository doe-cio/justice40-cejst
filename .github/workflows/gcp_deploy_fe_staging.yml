name: Deploy Frontend Staging
on:
  pull_request:
    branches:
      - main
      - '**/release/**'
    paths:
      - "client/**/*"

  workflow_dispatch:
    branches:
      - gcp_workflows 
    paths:
      - "client/**/*"

env:
  ###PR_NUMBER: ${{github.event.pull_request.number}}
  PR_NUMBER: 12345 
  WORKING_DIRECTORY: ./client
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    strategy:
      matrix:
        node-version: [14.x]

    #Add "id-token" with the intended permissions
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set DESTINATION_FOLDER for branch
        run: |
          echo "DESTINATION_FOLDER=$(echo $PR_NUMBER-$GITHUB_SHA | cut -c 1-11)" >> $GITHUB_ENV
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build --if-present
        env:
          # See the client readme for more info on environment variables:
          # https://github.com/usds/justice40-tool/blob/main/client/README.md
          DATA_SOURCE: cdn
          SITE_URL: "${{ secrets.STAGE_SITE_URL }}"
          PATH_PREFIX: "/${{env.DESTINATION_FOLDER}}"
          MAPBOX_STYLES_READ_TOKEN: "${{ secrets.MAPBOX_STYLES_READ_TOKEN }}"
      - name: Get directory contents
        run: ls -la public
      - name: Lint
        run: npm run lint
        # Disabling for now due to jsonlint - TODO: put this back
      # - name: License Check
      #   run: npm run licenses
      #- name: Test
      #  run: npm test
      - name: Check for security vulnerabilities
        run: npm audit --production
      # - name: Cypress / Gherkin integration tests ðŸŒƒ
      #   uses: cypress-io/github-action@v4
      #   with:
      #     working-directory: ${{env.WORKING_DIRECTORY}}
      #     browser: chrome
      #     start: npm start
      #     wait-on: "http://localhost:8000/en"
      
      - name: Set COMMIT_HASH for branch
        run: |
          echo "COMMIT_HASH=$(echo $GITHUB_SHA)" >> $GITHUB_ENV

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/1059665175923/locations/global/workloadIdentityPools/j40-pool/providers/j40-provider'
          service_account: 'j40-service-account@prj-icc-sandbox-poc.iam.gserviceaccount.com'

      - id: 'upload-files'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: ./client/public
          destination: 'doe-justice40-website/justice40-cejst/${{env.DESTINATION_FOLDER}}'
          parent: false

      - name: Update PR with deployed URL
        uses: mshick/add-pr-comment@v1
        with:
          # Deploy to S3 for the staging URL
          message: |
            **ðŸš¢  Here is the frontend staging link: ðŸš¢**   
            Find it here: https://screeningtool-staging.geoplatform.gov/${{env.DESTINATION_FOLDER}}/en/ !
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]" # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default
      - name: Printing deployment URLs
        run: |
          echo "Github pages: https://doe-cio.github.io/justice40-cejst/$DESTINATION_FOLDER/en"
      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v18.1
      - name: Update PR with message that en.json has been updated
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ** ðŸ‘‹  Attention translators!! ðŸ‘‹  **
            Copy changes have resulted in a new en.json file. Please download en.json file and send to translators: https://github.com/doe-cio/justice40-cejst/blob/${{env.COMMIT_HASH}}/client/src/intl/en.json
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]" # The user.login for temporary GitHub tokens
          allow-repeats: true
        if: contains(steps.changed-files.outputs.modified_files, 'client/src/intl/en.json')
